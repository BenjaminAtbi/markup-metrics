<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<!--  This file is part of the DITA Open Toolkit project. See the accompanying LICENSE file for applicable license.  -->

<concept id="pdf-plugin-structure">
  <title>PDF plug-in structure</title>
  <shortdesc>In cases that require substantial customizations, it is often useful to organize the files in a folder
    structure that mimics the hierarchy of the default PDF plug-in. This method facilitates comparisons with the default
    settings in the base PDF plug-in and makes it easier to migrate customizations to new toolkit versions.</shortdesc>

  <conbody>
    <note>For simpler customizations, you may want to structure your plug-in differently, but the information in this
      topic may help you to locate the files you need to customize.</note>
    <p>The original Idiom plug-in used its own extension mechanism to provide overrides to the PDF transformation. With
      this approach, a dedicated folder within the plug-in was used to store customized files. While this method is no
      longer recommended, the same organization principles can be used in custom PDF plug-ins.</p>
    <p>To begin creating a new custom plug-in, you can copy the <filepath>plugins/org.dita.pdf2/Customization</filepath>
      folder to a new folder, such as <filepath>plugins/com.company.pdf</filepath>.</p>
    <p>DITA-OT provides template files that you can start with throughout the <filepath>Customization</filepath>
      directory structure. These files end in the suffix <codeph>.orig</codeph> (for example,
        <filepath>catalog.xml.orig</filepath>). To enable these files, copy them to your custom plug-in and remove the
        <codeph>.orig</codeph> suffix. For example, copy <filepath>catalog.xml.orig</filepath> to
        <filepath>catalog.xml</filepath>. You can then make modifications to the copy in your custom plug-in folder.</p>
    <p>Things you can currently override include:</p>
    <ul>
      <li>Custom XSL via <filepath>xsl/custom.xsl</filepath> and <filepath>attrs/custom.xsl</filepath></li>
      <li>Layout overrides via <filepath>layout-masters.xsl</filepath></li>
      <li>Font overrides via <filepath>font-mappings.xml</filepath></li>
      <li>Per-locale variable overrides via <filepath>common/vars/[language].xml</filepath></li>
      <li>I18N configuration via <filepath>i18n/[language].xml</filepath></li>
      <li>Index configuration via <filepath>index/[language].xml</filepath></li>
    </ul>
    <p>When customizing any of these areas, modify the relevant file(s) in your custom plug-in folder. Then, to enable
      the changes in the publishing process, you find the corresponding entry for each file you modified in the
        <filepath>catalog.xml</filepath> file.</p>
    <p>It should look like this:</p>
    <codeblock>&lt;!--uri name="cfg:fo/attrs/custom.xsl" uri="fo/attrs/custom.xsl"/--&gt;</codeblock>
    <p>Remove the comment markers <codeph>!--</codeph> and <codeph>--</codeph> to enable the change:</p>
    <codeblock>&lt;uri name="cfg:fo/attrs/custom.xsl" uri="fo/attrs/custom.xsl"/&gt;</codeblock>
    <p>Your customization should now be enabled as part of the publishing process.</p>
    <p>When your custom plug-in is installed, the files in its subfolders will override the out-of-the-box settings from
      their counterparts in <filepath>org.dita.pdf2/cfg/fo/attrs</filepath> and
        <filepath>org.dita.pdf2/xsl/fo</filepath>.</p>
  </conbody>
</concept>
